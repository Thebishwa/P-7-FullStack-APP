{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bishwapaiyar42/Downloads/oc-project-7-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/bishwapaiyar42/Downloads/oc-project-7-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: \"create-post\",\n  data: function data() {\n    return {\n      post: {\n        postText: '',\n        userId: localStorage.userId,\n        imageUrl: null\n      },\n      selectedFile: null\n    };\n  },\n  methods: {\n    handleFileUpload: function handleFileUpload(event) {\n      this.selectedFile = event.target.files[0];\n      console.log(this.selectedFile);\n    },\n    ////////////////////////////////////////////////////////////\n    //create post\n    createPost: function createPost() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fd, url;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_this.post.postText == '')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                alert('Please write some text or add image!');\n                _context.next = 11;\n                break;\n\n              case 4:\n                fd = new FormData();\n                fd.append('image', _this.selectedFile);\n                fd.append('text', _this.post.postText);\n                fd.append('userId', _this.post.userId);\n                url = '/post/newPost';\n                _context.next = 11;\n                return axios.post(url, fd, {\n                  headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                  }\n                }).then(function (response) {\n                  console.log(response);\n\n                  _this.$router.push('/home');\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    ////////////////////////////////////////////////////////////\n    //update post\n    updatePost: function updatePost() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var postId, fd, url;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(_this2.post.postText == '')) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                alert('Please write some text or add image!');\n                _context2.next = 12;\n                break;\n\n              case 4:\n                postId = localStorage.getItem('postUpdate');\n                fd = new FormData();\n                fd.append('image', _this2.selectedFile);\n                fd.append('text', _this2.post.postText);\n                fd.append('userId', _this2.post.userId);\n                url = \"/post/updatePost/\".concat(postId);\n                _context2.next = 12;\n                return axios.put(url, fd, {\n                  headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                  }\n                }).then(function (response) {\n                  console.log(response);\n\n                  _this2.$router.push('/home');\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 12:\n                localStorage.removeItem('postUpdate');\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    ////////////////////////////////////////////////////////////\n    // delete the textarea\n    resetPost: function resetPost() {\n      this.post.postText = '';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AAEA;EACAA,mBADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,YADA;QAEAC,2BAFA;QAGAC;MAHA,CADA;MAMAC;IANA;EAQA,CAXA;EAYAC;IAEAC,gBAFA,4BAEAC,KAFA,EAEA;MACA;MACAC;IACA,CALA;IAOA;IACA;IACAC,UATA,wBASA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MACA,yBADA;kBAAA;kBAAA;gBAAA;;gBAEAC;gBAFA;gBAAA;;cAAA;gBAIAC,EAJA,GAIA,cAJA;gBAKAA;gBACAA;gBACAA;gBACAC,GARA,GAQA,eARA;gBAAA;gBAAA,OASAC;kBACAC;oBACAC;kBADA;gBADA,GAIAC,IAJA,CAIA;kBACAR;;kBACA;gBACA,CAPA,EAQAS,KARA,CAQA;kBACAT;gBACA,CAVA,CATA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAqBA,CA9BA;IAgCA;IACA;IACAU,UAlCA,wBAkCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MACA,0BADA;kBAAA;kBAAA;gBAAA;;gBAEAR;gBAFA;gBAAA;;cAAA;gBAIAS,MAJA,GAIAC,kCAJA;gBAKAT,EALA,GAKA,cALA;gBAMAA;gBACAA;gBACAA;gBACAC,GATA,8BASAO,MATA;gBAAA;gBAAA,OAUAN;kBACAC;oBACAC;kBADA;gBADA,GAIAC,IAJA,CAIA;kBACAR;;kBACA;gBACA,CAPA,EAQAS,KARA,CAQA;kBACAT;gBACA,CAVA,CAVA;;cAAA;gBAsBAY;;cAtBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAuBA,CAzDA;IA2DA;IACA;IACAC,SA7DA,uBA6DA;MACA;IACA;EA/DA;AAZA","names":["name","data","post","postText","userId","imageUrl","selectedFile","methods","handleFileUpload","event","console","createPost","alert","fd","url","axios","headers","Authorization","then","catch","updatePost","postId","localStorage","resetPost"],"sourceRoot":"src/components","sources":["Create.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"post\">\n      <div class=\"post_content\">\n        <form @submit.prevent=\"createPost\">\n          <textarea type=\"text\" name=\"text\" col=\"5\" placeholder=\"Write some text...\" required v-model=\"post.postText\"></textarea>\n          <div class=\"upload-button\">\n            <input @change=\"handleFileUpload\" lang=\"de\"\n            type=\"file\" ref=\"file\" name=\"img\" id=\"imgInput\"\n            accept=\"image/png, image/jpeg, image/gif, image/jpg\">\n          </div>\n        </form>\n      </div>\n      <div class=\"post_buttons\">\n        <button @click=\"createPost()\">Post</button>\n        <button @click=\"resetPost()\">Reset</button>\n        <button @click=\"updatePost()\">Update</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\n  import axios from 'axios'\n\n  export default {\n    name: \"create-post\",\n    data() {\n      return {\n        post:{\n          postText:'',\n          userId: localStorage.userId,\n          imageUrl: null,\n        },\n        selectedFile: null\n      }\n    },\n    methods: {\n\n      handleFileUpload(event) {\n        this.selectedFile = event.target.files[0]\n        console.log(this.selectedFile)\n      },\n\n      ////////////////////////////////////////////////////////////\n      //create post\n      async createPost() {\n        if (this.post.postText == '') {\n          alert('Please write some text or add image!')\n        } else {\n          const fd = new FormData()\n          fd.append('image', this.selectedFile)\n          fd.append('text', this.post.postText)\n          fd.append('userId', this.post.userId)\n          const url = '/post/newPost'\n          await axios.post(url, fd, {\n            headers : {\n              Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n          }).then((response) => {\n          console.log(response);\n          this.$router.push('/home')\n          })\n          .catch((error) => {\n          console.log(error);\n          });\n        }\n      },\n\n      ////////////////////////////////////////////////////////////\n      //update post\n      async updatePost() {\n        if (this.post.postText == '') {\n          alert('Please write some text or add image!')\n        } else {\n          const postId = localStorage.getItem('postUpdate')\n          const fd = new FormData()\n          fd.append('image', this.selectedFile)\n          fd.append('text', this.post.postText)\n          fd.append('userId', this.post.userId)\n          const url = `/post/updatePost/${postId}`\n          await axios.put(url, fd, {\n            headers : {\n              Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n          }).then((response) => {\n          console.log(response);\n          this.$router.push('/home')\n          })\n          .catch((error) => {\n          console.log(error);\n          });\n        }\n        localStorage.removeItem('postUpdate')\n      },\n\n      ////////////////////////////////////////////////////////////\n      // delete the textarea\n      resetPost() {\n          this.post.postText = ''\n        },\n    }\n  }\n</script>\n\n<style>\n\n  .upload-button{\n    display: flex;\n  }\n\n  input[type=file]::file-selector-button {\n  padding: 5px 5px;\n  border-radius: 5px;\n  background-color: #333;\n  font-weight: lighter;\n  color: white;\n  }\n\n  input[type=file]::file-selector-button:hover {\n  background-color: green;\n  border: 2px solid #333;\n  transition: 0.8s;\n  }\n\n  textarea {\n    height: 130px;\n    width: -webkit-fill-available;\n    resize:none;\n    font-size:14px;\n    padding: 10px;\n  }\n  \n  #reset {\n    position: relative;\n    top:14px;\n    left:105px;\n    margin-right: 10px;\n    width: 100px;\n    height: 40px;\n    border: 2px solid white;\n    background: green;\n    color: white;\n    border-radius: 10px;\n    font-size:14px\n  }\n\n  #reset:hover{\n    border-color: aqua;\n    transition: 0.8s;\n  }\n\n  #imgInput {\n    position: relative;\n    top:10px;\n    left:0px;\n  }\n</style>\n\n<style scoped>\n  .post_content{\n    min-height: 150px;\n  }\n\n  .post_buttons {\n    margin-top: 50px\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}